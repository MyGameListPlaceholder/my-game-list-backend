# Generated by Django 4.1.7 on 2023-03-22 18:00

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Developer",
            fields=[
                (
                    "id",
                    models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                ("name", models.CharField(max_length=255, unique=True, verbose_name="name")),
            ],
            options={
                "verbose_name": "developer",
                "verbose_name_plural": "developers",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "id",
                    models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                ("title", models.CharField(max_length=255, unique=True, verbose_name="title")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="creation time"),
                ),
                (
                    "last_modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="last modified"),
                ),
                (
                    "release_date",
                    models.DateField(blank=True, null=True, verbose_name="release date"),
                ),
                (
                    "cover_image",
                    models.BinaryField(editable=True, max_length=307200, verbose_name="cover image"),
                ),
                (
                    "description",
                    models.TextField(blank=True, max_length=2000, verbose_name="description"),
                ),
                (
                    "developer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="games",
                        to="games.developer",
                    ),
                ),
            ],
            options={
                "verbose_name": "game",
                "verbose_name_plural": "games",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                ("name", models.CharField(max_length=255, unique=True, verbose_name="name")),
            ],
            options={
                "verbose_name": "genre",
                "verbose_name_plural": "genres",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Platform",
            fields=[
                (
                    "id",
                    models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                ("name", models.CharField(max_length=255, unique=True, verbose_name="name")),
            ],
            options={
                "verbose_name": "platform",
                "verbose_name_plural": "platforms",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Publisher",
            fields=[
                (
                    "id",
                    models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                ("name", models.CharField(max_length=255, unique=True, verbose_name="name")),
            ],
            options={
                "verbose_name": "publisher",
                "verbose_name_plural": "publishers",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GameReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                (
                    "score",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="score",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="creation time"),
                ),
                (
                    "review",
                    models.TextField(blank=True, max_length=1000, verbose_name="description"),
                ),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="reviews",
                        to="games.game",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "game review",
                "verbose_name_plural": "games reviews",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GameList",
            fields=[
                (
                    "id",
                    models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("C", "Completed"),
                            ("PTP", "Plan to play"),
                            ("P", "Playing"),
                            ("D", "Dropped"),
                            ("OH", "On hold"),
                        ],
                        max_length=3,
                        verbose_name="status",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="creation time"),
                ),
                (
                    "last_modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="last modified"),
                ),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="game_lists",
                        to="games.game",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="game_lists",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "game list",
                "verbose_name_plural": "game lists",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GameFollow",
            fields=[
                (
                    "id",
                    models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="creation time"),
                ),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="follow_list",
                        to="games.game",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="games_followed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "game follow",
                "verbose_name_plural": "games followed",
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="game",
            name="genres",
            field=models.ManyToManyField(related_name="games", to="games.genre"),
        ),
        migrations.AddField(
            model_name="game",
            name="platforms",
            field=models.ManyToManyField(related_name="games", to="games.platform"),
        ),
        migrations.AddField(
            model_name="game",
            name="publisher",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="games",
                to="games.publisher",
            ),
        ),
        migrations.AddConstraint(
            model_name="gamereview",
            constraint=models.UniqueConstraint(fields=("game", "user"), name="unique_game_user_in_game_review"),
        ),
        migrations.AddConstraint(
            model_name="gamelist",
            constraint=models.UniqueConstraint(fields=("game", "user"), name="unique_game_user_in_game_list"),
        ),
        migrations.AddConstraint(
            model_name="gamefollow",
            constraint=models.UniqueConstraint(fields=("game", "user"), name="unique_game_user_in_game_follow"),
        ),
    ]
