# Generated by Django 5.1.1 on 2024-09-09 06:38

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Company",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, unique=True, verbose_name="name")),
                ("company_logo_id", models.CharField(blank=True, max_length=255, verbose_name="company logo id")),
                ("igdb_id", models.PositiveIntegerField(unique=True, verbose_name="igdb id")),
            ],
            options={
                "verbose_name": "company",
                "verbose_name_plural": "companies",
                "ordering": ("id",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Developer",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, unique=True, verbose_name="name")),
                (
                    "developer_logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="developer_logos/",
                        validators=[],
                        verbose_name="developer logo",
                    ),
                ),
            ],
            options={
                "verbose_name": "developer",
                "verbose_name_plural": "developers",
                "ordering": ("id",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, unique=True, verbose_name="name")),
                ("igdb_id", models.PositiveIntegerField(unique=True, verbose_name="igdb id")),
            ],
            options={
                "verbose_name": "genre",
                "verbose_name_plural": "genres",
                "ordering": ("id",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Publisher",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, unique=True, verbose_name="name")),
                (
                    "publisher_logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="publisher_logos/",
                        validators=[],
                        verbose_name="developer logo",
                    ),
                ),
            ],
            options={
                "verbose_name": "publisher",
                "verbose_name_plural": "publishers",
                "ordering": ("id",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Platform",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, unique=True, verbose_name="name")),
                ("abbreviation", models.CharField(blank=True, max_length=255, verbose_name="abbreviation")),
                ("igdb_id", models.PositiveIntegerField(unique=True, verbose_name="igdb id")),
            ],
            options={
                "verbose_name": "platform",
                "verbose_name_plural": "platforms",
                "ordering": ("id",),
                "abstract": False,
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("abbreviation__gt", ""), ("abbreviation__isnull", False)),
                        fields=("abbreviation",),
                        name="unique_abbreviation",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255, unique=True, verbose_name="title")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="creation time")),
                ("last_modified_at", models.DateTimeField(auto_now=True, verbose_name="last modified")),
                ("release_date", models.DateField(blank=True, null=True, verbose_name="release date")),
                ("cover_image_id", models.CharField(blank=True, max_length=255, verbose_name="cover image id")),
                ("summary", models.TextField(blank=True, max_length=2000, verbose_name="summary")),
                ("igdb_id", models.CharField(max_length=255, unique=True, verbose_name="igdb id")),
                (
                    "developer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="games_developed", to="games.company"
                    ),
                ),
                (
                    "publisher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="games_published", to="games.company"
                    ),
                ),
                ("genres", models.ManyToManyField(related_name="games", to="games.genre")),
                ("platforms", models.ManyToManyField(related_name="games", to="games.platform")),
            ],
            options={
                "verbose_name": "game",
                "verbose_name_plural": "games",
                "ordering": ("id",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GameFollow",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="creation time")),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="follow_list", to="games.game"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="games_followed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "game follow",
                "verbose_name_plural": "games followed",
                "ordering": ("id",),
                "abstract": False,
                "constraints": [
                    models.UniqueConstraint(fields=("game", "user"), name="unique_game_user_in_game_follow")
                ],
            },
        ),
        migrations.CreateModel(
            name="GameList",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "score",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="score",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("C", "Completed"),
                            ("PTP", "Plan to play"),
                            ("P", "Playing"),
                            ("D", "Dropped"),
                            ("OH", "On hold"),
                        ],
                        max_length=3,
                        verbose_name="status",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="creation time")),
                ("last_modified_at", models.DateTimeField(auto_now=True, verbose_name="last modified")),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="game_lists", to="games.game"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="game_lists",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "game list",
                "verbose_name_plural": "game lists",
                "ordering": ("id",),
                "abstract": False,
                "constraints": [models.UniqueConstraint(fields=("game", "user"), name="unique_game_user_in_game_list")],
            },
        ),
        migrations.CreateModel(
            name="GameReview",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="creation time")),
                ("review", models.TextField(blank=True, max_length=1000, verbose_name="review")),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="reviews", to="games.game"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="reviews", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "verbose_name": "game review",
                "verbose_name_plural": "games reviews",
                "ordering": ("id",),
                "abstract": False,
                "constraints": [
                    models.UniqueConstraint(fields=("game", "user"), name="unique_game_user_in_game_review")
                ],
            },
        ),
    ]
