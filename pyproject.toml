[tool.black]
# Compatible with the flake8 line length
line-length = 120

[tool.ruff]
line-length = 120
# https://beta.ruff.rs/docs/rules/
select = [
    "F",  # Pyflakes
    "E", "W",  # pycodestyle
    "C90",  # mccabe
    "I",  # isort
    "N",  # pep8-naming
    "D",  # pydocstyle
    "UP",  # pyupgrade
    "ANN",  # flake8-annotations
    "ASYNC",  # flake8-async
    "S",  # flake8-bandit
    "BLE",  # flake8-blind-except
    "FBT",  # flake8-boolean-trap
    "B",  # flake8-bugbear
    "A",  # flake8-builtins
    "COM",  # flake8-commas
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T10",  # flake8-debugger
    "DJ",  # flake8-django
    "EM",  # flake8-errmsg
    "EXE",  # flake8-executable
    "ISC",  # flake8-implicit-str-concat
    "INP",  # flake8-no-pep420
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PYI",  # flake8-pyi
    "PT",  # flake8-pytest-style
    "Q",  # flake8-quotes
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "SLOT",  # flake8-slots
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "TD",  # flake8-todos
    "ERA",  # eradicate
    "PGH",  # pygrep-hooks
    "PL", "PLC", "PLE", "PLR", "PLW",  # Pylint
    "TRY",  # tryceratops
    "PERF",  # Perflint
    "RUF",  # Ruff-specific-rules
]
ignore = [
    "D203",  # in conflict with D211
    "D212",  # in conflict with D213
]
extend-exclude = [
    "*/migrations/*",
    "stubs/*",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "PLR0913"]
"scripts/*" = ["INP001"]
"docker/app/gunicorn.conf.py" = ["INP001"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.mypy]
mypy_path = "stubs"
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]
strict = true

[tool.django-stubs]
django_settings_module = "my_game_list.settings.base"

[[tool.mypy.overrides]]
module = "dacite"
implicit_reexport = true
