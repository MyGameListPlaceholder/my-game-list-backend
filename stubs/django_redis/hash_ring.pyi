from _typeshed import Incomplete
from typing import Iterable, Iterator, List, Optional, Tuple

class HashRing:
    nodes: List[str]
    replicas: Incomplete
    ring: Incomplete
    sorted_keys: Incomplete
    def __init__(self, nodes: Iterable[str] = ..., replicas: int = ...) -> None: ...
    def add_node(self, node: str) -> None: ...
    def remove_node(self, node: str) -> None: ...
    def get_node(self, key: str) -> Optional[str]: ...
    def get_node_pos(self, key: str) -> Tuple[Optional[str], Optional[int]]: ...
    def iter_nodes(self, key: str) -> Iterator[Tuple[Optional[str], Optional[str]]]: ...
    def __call__(self, key: str) -> Optional[str]: ...
