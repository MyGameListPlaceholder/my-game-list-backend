from _typeshed import Incomplete
from redis import Redis as Redis

class ConnectionFactory:
    pool_cls: Incomplete
    pool_cls_kwargs: Incomplete
    redis_client_cls: Incomplete
    redis_client_cls_kwargs: Incomplete
    options: Incomplete
    def __init__(self, options: Incomplete) -> None: ...
    def make_connection_params(self, url: Incomplete) -> Incomplete: ...
    def connect(self, url: str) -> Redis[Incomplete]: ...
    def disconnect(self, connection: Incomplete) -> None: ...
    def get_connection(self, params: Incomplete) -> Incomplete: ...
    def get_parser_cls(self) -> Incomplete: ...
    def get_or_create_connection_pool(self, params: Incomplete) -> Incomplete: ...
    def get_connection_pool(self, params: Incomplete) -> Incomplete: ...

class SentinelConnectionFactory(ConnectionFactory):
    def __init__(self, options: Incomplete) -> None: ...
    def get_connection_pool(self, params: Incomplete) -> Incomplete: ...

def get_connection_factory(path: Incomplete | None = ..., options: Incomplete | None = ...) -> Incomplete: ...
