import io
from _typeshed import Incomplete

cERROR_PIPE_BUSY: int
cSECURITY_SQOS_PRESENT: int
cSECURITY_ANONYMOUS: int
MAXIMUM_RETRY_COUNT: int

def check_closed(f: Incomplete) -> Incomplete: ...

class NpipeSocket:
    def __init__(self, handle: Incomplete | None = ...) -> None: ...
    def accept(self) -> None: ...
    def bind(self, address: Incomplete) -> None: ...
    def close(self) -> None: ...
    flags: Incomplete
    def connect(self, address: Incomplete, retry_count: int = ...) -> Incomplete: ...
    def connect_ex(self, address: Incomplete) -> Incomplete: ...
    def detach(self) -> Incomplete: ...
    def dup(self) -> Incomplete: ...
    def getpeername(self) -> Incomplete: ...
    def getsockname(self) -> Incomplete: ...
    def getsockopt(self, level: Incomplete, optname: Incomplete, buflen: Incomplete | None = ...) -> None: ...
    def ioctl(self, control: Incomplete, option: Incomplete) -> None: ...
    def listen(self, backlog: Incomplete) -> None: ...
    def makefile(self, mode: Incomplete | None = ..., bufsize: Incomplete | None = ...) -> Incomplete: ...
    def recv(self, bufsize: Incomplete, flags: int = ...) -> Incomplete: ...
    def recvfrom(self, bufsize: Incomplete, flags: int = ...) -> Incomplete: ...
    def recvfrom_into(self, buf: Incomplete, nbytes: int = ..., flags: int = ...) -> Incomplete: ...
    def recv_into(self, buf: Incomplete, nbytes: int = ...) -> Incomplete: ...
    def send(self, string: Incomplete, flags: int = ...) -> Incomplete: ...
    def sendall(self, string: Incomplete, flags: int = ...) -> Incomplete: ...
    def sendto(self, string: Incomplete, address: Incomplete) -> Incomplete: ...
    def setblocking(self, flag: Incomplete) -> Incomplete: ...
    def settimeout(self, value: Incomplete) -> None: ...
    def gettimeout(self) -> Incomplete: ...
    def setsockopt(self, level: Incomplete, optname: Incomplete, value: Incomplete) -> None: ...
    def shutdown(self, how: Incomplete) -> Incomplete: ...

class NpipeFileIOBase(io.RawIOBase):
    sock: Incomplete
    def __init__(self, npipe_socket: Incomplete) -> None: ...
    def close(self) -> None: ...
    def fileno(self) -> Incomplete: ...
    def isatty(self) -> Incomplete: ...
    def readable(self) -> Incomplete: ...
    def readinto(self, buf: Incomplete) -> Incomplete: ...
    def seekable(self) -> Incomplete: ...
    def writable(self) -> Incomplete: ...
