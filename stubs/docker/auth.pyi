from . import credentials as credentials, errors as errors
from .utils import config as config
from _typeshed import Incomplete

INDEX_NAME: str
INDEX_URL: Incomplete
TOKEN_USERNAME: str
log: Incomplete

def resolve_repository_name(repo_name: Incomplete) -> Incomplete: ...
def resolve_index_name(index_name: Incomplete) -> Incomplete: ...
def get_config_header(client: Incomplete, registry: Incomplete) -> Incomplete: ...
def split_repo_name(repo_name: Incomplete) -> Incomplete: ...
def get_credential_store(authconfig: Incomplete, registry: Incomplete) -> Incomplete: ...

class AuthConfig(dict[Incomplete, Incomplete]):
    def __init__(self, dct: Incomplete, credstore_env: Incomplete | None = ...) -> None: ...
    @classmethod
    def parse_auth(cls, entries: Incomplete, raise_on_error: bool = ...) -> Incomplete: ...
    @classmethod
    def load_config(
        cls, config_path: Incomplete, config_dict: Incomplete, credstore_env: Incomplete | None = ...
    ) -> Incomplete: ...
    @property
    def auths(self) -> Incomplete: ...
    @property
    def creds_store(self) -> Incomplete: ...
    @property
    def cred_helpers(self) -> Incomplete: ...
    @property
    def is_empty(self) -> Incomplete: ...
    def resolve_authconfig(self, registry: Incomplete | None = ...) -> Incomplete: ...
    def get_credential_store(self, registry: Incomplete) -> Incomplete: ...
    def get_all_credentials(self) -> Incomplete: ...
    def add_auth(self, reg: Incomplete, data: Incomplete) -> None: ...

def resolve_authconfig(
    authconfig: Incomplete, registry: Incomplete | None = ..., credstore_env: Incomplete | None = ...
) -> Incomplete: ...
def convert_to_hostname(url: Incomplete) -> Incomplete: ...
def decode_auth(auth: Incomplete) -> Incomplete: ...
def encode_header(auth: Incomplete) -> Incomplete: ...
def parse_auth(entries: Incomplete, raise_on_error: bool = ...) -> Incomplete: ...
def load_config(
    config_path: Incomplete | None = ..., config_dict: Incomplete | None = ..., credstore_env: Incomplete | None = ...
) -> Incomplete: ...
