from .. import errors as errors
from ..constants import (
    BYTE_UNITS as BYTE_UNITS,
    DEFAULT_HTTP_HOST as DEFAULT_HTTP_HOST,
    DEFAULT_NPIPE as DEFAULT_NPIPE,
    DEFAULT_UNIX_SOCKET as DEFAULT_UNIX_SOCKET,
)
from ..tls import TLSConfig as TLSConfig
from _typeshed import Incomplete
from typing import NamedTuple

class URLComponents(NamedTuple):
    scheme: Incomplete
    netloc: Incomplete
    url: Incomplete
    params: Incomplete
    query: Incomplete
    fragment: Incomplete

def create_ipam_pool(*args: Incomplete, **kwargs: Incomplete) -> None: ...
def create_ipam_config(*args: Incomplete, **kwargs: Incomplete) -> None: ...
def decode_json_header(header: Incomplete) -> Incomplete: ...
def compare_version(v1: Incomplete, v2: Incomplete) -> Incomplete: ...
def version_lt(v1: Incomplete, v2: Incomplete) -> Incomplete: ...
def version_gte(v1: Incomplete, v2: Incomplete) -> Incomplete: ...
def convert_port_bindings(port_bindings: Incomplete) -> Incomplete: ...
def convert_volume_binds(binds: Incomplete) -> Incomplete: ...
def convert_tmpfs_mounts(tmpfs: Incomplete) -> Incomplete: ...
def convert_service_networks(networks: Incomplete) -> Incomplete: ...
def parse_repository_tag(repo_name: Incomplete) -> Incomplete: ...
def parse_host(addr: Incomplete, is_win32: bool = ..., tls: bool = ...) -> Incomplete: ...
def parse_devices(devices: Incomplete) -> Incomplete: ...
def kwargs_from_env(
    ssl_version: Incomplete | None = ..., assert_hostname: Incomplete | None = ..., environment: Incomplete | None = ...
) -> Incomplete: ...
def convert_filters(filters: Incomplete) -> Incomplete: ...
def datetime_to_timestamp(dt: Incomplete) -> Incomplete: ...
def parse_bytes(s: Incomplete) -> Incomplete: ...
def normalize_links(links: Incomplete) -> Incomplete: ...
def parse_env_file(env_file: Incomplete) -> Incomplete: ...
def split_command(command: Incomplete) -> Incomplete: ...
def format_environment(environment: Incomplete) -> Incomplete: ...
def format_extra_hosts(extra_hosts: Incomplete, task: bool = ...) -> Incomplete: ...
def create_host_config(self: Incomplete, *args: Incomplete, **kwargs: Incomplete) -> None: ...
